package io.github.notsyncing.lightfur.entity

import kotlin.properties.ReadWriteProperty
import kotlin.reflect.KProperty

class EntityField<T>(val fieldType: Class<T>,
                     val column: String? = null,
                     val type: String? = null,
                     val length: Int = 0,
                     var nullable: Boolean = false,
                     val defaultValue: T? = null,
                     val defaultValueDefinedInDatabase: Boolean = false,
                     val primaryKey: Boolean = false,
                     val autoGenerated: Boolean = false) : ReadWriteProperty<EntityModel, T> {
    var data: Any? = null
        get() = field
        set(value) {
            changed = field != value
            field = value
        }

    var changed = false

    var name: String = ""
        private set

    val dbColumn get() = column ?: name
    val dbType get() = type
    val dbLength get() = length
    val dbNullable get() = nullable
    val dbDefaultValue get() = defaultValue
    val dbHasDefaultValue get() = defaultValueDefinedInDatabase
    val dbPrimaryKey get() = primaryKey
    val dbAutoGenerated get() = autoGenerated

    lateinit var entity: EntityModel

    override fun getValue(thisRef: EntityModel, property: KProperty<*>): T {
        return data as T
    }

    override fun setValue(thisRef: EntityModel, property: KProperty<*>, value: T) {
        changed = data != value
        data = value
    }

    operator fun provideDelegate(thisRef: EntityModel, property: KProperty<*>): ReadWriteProperty<EntityModel, T> {
        entity = thisRef

        val propertyName = property.name
        name = propertyName

        nullable = property.returnType.isMarkedNullable

        if (primaryKey) {
            val l = EntityModel.getPrimaryKeyFieldsFromCache(thisRef::class.java as Class<EntityModel>)
            l.add(property)
            thisRef.primaryKeyFieldInfos.add(this)
            thisRef.primaryKeyFields = l
        }

        thisRef.fieldMap[propertyName] = this

        return this
    }
}
